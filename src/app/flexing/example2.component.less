/* toolbar options */
.filler {
    flex: 1 1 auto;
  }
  .gap {
    margin-right: 10px;
    margin-left: 10px;
  }
  
  hr {
   border: none;
   height: 1px;
   /* Set the hr color */
   background-color: lightgray; /* Modern Browsers */
  }
  
  
  /* Mountain */
  
  .parent {
   display: flex;
   height: 100px; /* Or whatever */
  }
  
  .child {
   width: auto;  /* Or whatever */
   height: auto; /* Or whatever */
   margin: auto;  /* Magic! */
  }
  
  .flex-container {
  /* We first create a flex layout context */
  display: flex;
  margin: 5%;
  border: 12px solid green;
  border-radius: 5px;
  
  /* Then we define the flow direction 
    and if we allow the items to wrap 
  * Remember this is the same as:
  * flex-direction: row;
  * flex-wrap: wrap;
  */
  flex-flow: row wrap;
  
  /* Then we define how is distributed the remaining space */
  justify-content: space-between;  
  padding: 60px;
  margin: 40;
  list-style: circle;
  }
  
  .flex-item {
  background: lightblue;
  padding: 3%;
  width: 80px;
  height: auto;
  margin-top: 10px;
  line-height: 150px;
  color: white;
  font-weight: bold;
  font-size: 2em;
  text-align: left;
  }
  .headerflex-item {
    background: darkblue;
    padding: 5%;
    width: 90%;
    height: 10px;
    margin-top: 10px;
    color: white;
    font-weight: bold;
    font-size: 2em;
    text-align: center;
    }
    .footerflex-item {
      background: darkblue;
      padding: 5%;
      width: 90%;
      height: 10px;
      margin-top: 10px;
      margin-bottom: 10px;
      color: white;
      font-weight: bold;
      font-size: 2em;
      text-align: center;
      }
  
  /* Large */
  .navigation {
   display: flex;
   flex-flow: row nowrap;
   /* This aligns items to the end line on main-axis */
   justify-content: flex-end;
  }
  
  /* Medium screens */
  @media all and (max-width: 800px) {
   .navigation {
     /* When on medium sized screens, we center it by evenly distributing empty space around items */
     justify-content: space-around;
   }
  }
  
  /* Small screens */
  @media all and (max-width: 500px) {
   .navigation {
     /* On small screens, we are no longer using row direction but column */
     flex-direction: column;
   }
  }
  
  
  .wrapper {
   display: flex;
   flex-flow: row wrap;
  }
  
  /* We tell all items to be 100% width, via flex-basis */
  .wrapper > * {
   flex: 1 100%;
  }
  
  /* We rely on source order for mobile-first approach
  * in this case:
  * 1. header
  * 2. article
  * 3. aside 1
  * 4. aside 2
  * 5. footer
  */
  
  /* Medium screens */
  @media all and (min-width: 600px) {
   /* We tell both sidebars to share a row */
   .aside { flex: 1 auto; }
  }
  
  /* Large screens */
  @media all and (min-width: 800px) {
   /* We invert order of first sidebar and main
    * And tell the main element to take twice as much width as the other two sidebars 
    */
   .main { flex: 2 0px; }
   .aside-1 { order: 1; }
   .main    { order: 2; }
   .aside-2 { order: 3; }
   .footer  { order: 4; }
  }